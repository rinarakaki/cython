# tag: cpp
PYTHON setup.py build_ext --inplace
PYTHON -c "import test"

######## test.pyx ########

# distutils: language = c++

extern from "test.h":
    struct c_Test "Test":
        r&i8 get_string() except +RuntimeError

struct Test:
    r&mut c_Test thisptr

impl Test:
    fn get_string(self):
        return self.thisptr.get_string()

######## test.h ########

static r&i8 astring = "123";
class Test {
public:
    const char* get_string(void) { return astring; }
};

######## setup.py ########

from distutils.core import setup
from Cython.Build.Dependencies import cythonize

setup(name='test', ext_modules=cythonize('*.pyx'))
